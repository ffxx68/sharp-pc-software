---------------------------------------------------------
このディストリビューションアーカイブには実際に例題として
いくつかのポケコンようソフトのアセンブリ言語ソースが
ついています。以下はチュートリアルの気持ちでお読み下さい。
---------------------------------------------------------


★  例題1:  PC-1245 ようモニタ   <yagmon1245>

オール機械語、リロケータブルな機械語モニタです。ぼくが
125x を持っていないので 1245 ようですが、何の変更もなし
に 125x シリーズで動くと思います。(ただし画面の使い方が
1245 に最適化されてしまっていますが…) なお、モニタの
詳細については mon45.doc をお読み下さい。

まず、ソースファイルを眺めてみましょう。ソースは mon45.s
です。だいたいこんな感じのソースを書くことから開発を始め
ます。

次にアセンブルです。

perl yasm.pl -w mon45.wav -old mon45.s

とします。対象機種が 1245/125x なので wav ファイル生成の
際は -old オプションを忘れずに。(wavファイルを作らない
場合は -old オプションは必要ありません。)

こうすると、標準出力にダンプリストが出てきます。正常に
アセンブルできると、新しいファイル "mon45.wav" ができる
はずです。

最後にポケコンに転送します。カセットインターフェイスをお使いの
計算機の音声出力に繋げ、ポケコン側で CLOAD M と入力してから
適当な方法で wav ファイルを再生してください。音量レベルが適当で
あればまずエラーは出ずにダウンロードできることと思います。

これで終了です。ちなみにモニタはポケコン側で

CALL &C200  (先頭アドレスから実行)

とすれば起動します。




★  例題2:  hello! データ

本アーカイブには二つの hello というソースファイルがあります。
hello.s と helloold.s で、前者は PC-1262, PC-1360(K) よう、
後者は PC-1245, PC-125x ようです。ソースを見ればわかりますが、
何のことはない VRAM に転送する HELLO! のキャラクタパタンだけ
ですので、先頭のorg の値を各機種の VRAM に合わせればそのまま
使えます。

まずアセンブルします。

perl yasm.pl -w hello.wav hello.s

もしくは、1245/5x でしたら、

perl yasm.pl -w hello.wav -old helloold.s

とします。 hello.wav というファイルが生成されるはずです。
あとは 例題1 と同様に CLOADM してみて下さい。こんなことも
できるんだなあ、と妙に納得してしまいますね！




★  例題3:  scroll

scroll.s は PC-1262 で動く仮想 VRAM を用いた画面スクロール
です。たぶん 1260/1261 でも動きます。ゲームでも作ろうかな、
と思って書いてみました。

scroll45.s は PC-1245/125x で動く左12桁分のスクロールです。
仮想 VRAM は使ってません。

