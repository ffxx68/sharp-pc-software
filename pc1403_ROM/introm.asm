; Sharp PC-1403 internal CPU ROM &-&1FFF


; BOOT from 0 ? 
	LB111:	4EE0			WAIT			224
0002			0201			LIA			1
0004			125F			LIP			95
0006			DB				EXAM		
0007			DF				OUTC		
0008	LB18:	4EE0			WAIT			224
000A			6000			ANIM			0
000C			DF				OUTC		; clear port C output
000D			6B40			TEST			64
000F			7E009F			JPZ			LB501
0012			4EE0			WAIT			224
0014			6B40			TEST			64  ; Test Xin
0016			390F			JRZM			LB18
0018			025C			LIA			92
001A			32				STR		
001B			4C				INA		
001C			6701			CPIA			1
001E			382C			JRZP			LB110
0020			125F			LIP			95
0022			10				LIDP			LB111
0025			57				LDD		
0026			6702			CPIA			2
0028			3A15			JRCP			LB112
002A			381A			JRZP			LB114
002C			66F3			TSIA			243
002E			3818			JRZP			LB119
0030			0211			LIA			17
0032			DB				EXAM		
0033			0002			LII			2
0035			02FF			LIA			255
0037			125C			LIP			&5C 
0039			1E				FILM		; set Port A, B and C to &FF
003A			5D				OUTA		
003B			DD				OUTB		
003C			5F				OUTF		
003D			DF				OUTC		
003E	LB112:	42				INCA		
003F			6B40			TEST		64  ; test Xin
0041			2904			JRNZM		LB112
0043			2D44			JRM			LB111

0045	LB114:  0260			LIA			96
0047	LB119:	DB				EXAM		
0048			DF				OUTC		
0049			2D0C			JRM			LB112

004A			0C				ADN		

; clear LCD and ... ?
004B			103000			LIDP		&3000  ; LCD left address ; clear screen memory
004E			00BF			LII			191
0050			0200			LIA			0
0052			1F				FILD		; ( A -> (DP); DP + 1 -> DP ) for I + 1 times
0053			0201			LIA			1
0055			E4BA			CAL	&04BA ; turn LCD on
0057			88				LP	8
0058			004F			LII			79
005A			0296			LIA			150
005C			1E				FILM		
005D	LB118:	88				LP	8
005E			004F			LII			79
0060			1C				SRW		
0061			0023			LII			35
0063			0203			LIA			3
0065			34				PUSH		
0066			AF				LP	47
0067			1353			LIQ			83
0069			0E				ADW		
006A			2F05			LOOP			5
006C			34				PUSH		
006D			AF				LP	47
006E			1353			LIQ			83
0070			0F				SBW		
0071			2F05			LOOP			5
0073			003F			LII			63
0075			103000			LIDP			12288  ; &3000 LCD left address
0078			90				LP	16
0079			19				EXWD		
007A			1100			LIDL			0
007C			90				LP	16
007D			18				MVWD		
007E	LB113:	6B40			TEST			64     ; test Xin
0080			3981			JRZM			LB111
0082			6B01			TEST			1      ; 0.5 sec delay
0084			3907			JRZM			LB113
0086			0101			LIJ			1
0088			EE68			CAL	&0E68
008A			2B0D			JRNCM			LB113
008C			82				LP	2
008D			6325			CPIM			37
008F			2912			JRNZM			LB113
0091			125F			LIP			95
0093			59				LDM		
0094			6131			ORIM			49
0096			6610			TSIA			16
0098			3803			JRZP			LB117
009A			6021			ANIM			33
009C	LB117:	DF				OUTC		
009D			2D41			JRM			LB118

009F	LB501:	025C			LIA			92
00A1			32				STR		
00A2			0101			LIJ			1
00A4			103C00			LIDP			3C00
00A7			0209			LIA			9	; ROM bank switch : 09
00A9			52				STD		
00AA			107FFE			LIDP			7FFE
00AD			57				LDD		
00AE			6755			CPIA			85
00B0			280D			JRNZP			LB50
00B2			103C00			LIDP			3C00
00B5			020B			LIA			11  ; ROM bank switch : 0B
00B7			52				STD		
00B8			107FFE			LIDP			7FFE
00BB			57				LDD		
00BC			6755			CPIA			85
00BE	LB50:	103C00			LIDP			3C00
00C1			020A			LIA			10  ; ROM bank switch : 0A
00C3			52				STD		
00C4			7E4000			JPZ			4000  ; --> TO EXTERNAL ROM bank 0B

00C7			103000			LIDP			3000  ; LCD left address
00CA			0200			LIA			0
00CC			00BF			LII			191    ; 12288 + 192 = 12480 
00CE			1F				FILD		       ; clear LCD memory
00CF			78404E			CALL			404E
00D2			89				LP	9
00D3			6000			ANIM			0
00D5	LB57:	EF2A			CAL	&0F2A    ; key scan ?? 
00D7			2808			JRNZP			LB52
00D9			6B01			TEST			1  ; 0.5 sec timer 
00DB			3907			JRZM			LB57
00DD			C8				INCL		
00DE			2B0A			JRNCM			LB57
00E0	LB52:	E4D6			CAL	&04D6
00E2			2D03			JRM			LB52




; 0 --> floatX (10..17) 
0143			B1				LP		31
0144			60FD			ANIM	FD
0146			98				LP		18
0147			2C0B			JRP		LB350



; used in float SUM ( FE2 -> 5C1 )
014F			B1				LP		31
0150			60FE			ANIM	FE
0152			90				LP		10
0153	LB350:		0007			LII		07
0155			0200			LIA		00
0157			1E				FILM
0158			37				RTN	

; 1 -> floatY (18..1F) 
0169			B1				LP		31		
016A			60FD			ANIM	FD	; clear flag?
016C			98				LP		18
016D			0007			LII		07
016F			0200			LIA		00
0171			1E				FILM
0172			9A				LP		1A
0173			6110			ORIM	10
0175			37				RTN	

; used in float SUM ( FE2 )
0192			91				LP		11
0193			59				LDM	
0194			640F			ANIA	0F
0196			60F0			ANIM	F0
0198			99				LP		19
0199			1311			LIQ		11
019B			0001			LII		01
019D			0F				SBW	
019E			91				LP		11
019F			47				ORMA
01A0			37				RTN	

; floatX (10..17) -> floatY (18..1F)
01CA			B1				LP		31		; flag?
01CB			60FE			ANIM	FE
01CD			6202			TSIM	02
01CF			3803			JRZP	LB340
01D1			6101			ORIM	01
01D3	LB340:	90				LP		10
01D4			1318			LIQ		18
01D6			2C44			JRP		LB341



; floatX (10..17) -> floatY (18..1F) 
01E6			B1				LP		31		; flag?
01E7			60FD			ANIM	FD
01E9			6201			TSIM	01
01EB			3803			JRZP	LB330
01ED			6102			ORIM	02
01EF	LB330:	98				LP		18
01F0			2C28			JRP		LB331


0219	LB331:	1310			LIQ		10
021B	LB341:	0007			LII		07
021D			08				MVW	
021E			37				RTN	


; *VERIFIED*
; floatX (10..17) <-> floatY (18..1F)
027F			90				LP		10
0280			1318			LIQ		18
0282			0007			LII		07
0284			09				EXW	
0285			37				RTN



; routine used by arithmetic operations
; 10BE (+), 10D3 (-), 10DF (*), 10E8 (/)
; but also in extrom08 +0x0A52 (sum?)
; This is always called BEFORE the operation
02CE			B1				LP		31 		; a temporary sign flag savepoint?
02CF			6000			ANIM	00		; reset (set to +)
02D1			99				LP		19		; 
02D2			6208			TSIM	08
02D4			380B			JRZP	LB140	; jump if FloatY is NOT negative
02D6			60F7			ANIM	F7		
02D8			B1				LP		31
02D9			6102			ORIM	02
02DB			2C04			JRP		LB140
02DD			B1				LP		31
02DE			6000			ANIM	00
02E0			91				LP		11
02E1			6208			TSIM	08		; jump if FloatX is NOT negative
02E3			3806			JRZP	LB140
02E5			60F7			ANIM	F7
02E7			B1				LP		31
02E8			6101			ORIM	01
02EA	LB140:	B0				LP		30
02EB			6000			ANIM	00
02ED			22				LDR	
02EE			7402			ADIA	02
02F0			10FF46			LIDP	FF46
02F3			52				STD	
02F4			37				RTN	
	
; routine used here by arithmetic operations
; 10BE (+), 10D3 (-), 10DF (*), 10E8 (/)
; This is always called AFTER the operation
02F5			99				LP		19
02F6			60F7			ANIM	F7	; reset FloatY sign
02F8			B1				LP		31
02F9			6202			TSIM	02
02FB			3804			JRZP	LB150
02FD			99				LP		19
02FE			6108			ORIM	08
0300	LB150:	0200			LIA		00
0302			B1				LP		31
0303			6201			TSIM	01	
0305			3803			JRZP	LB151
0307			0208			LIA		08
0309	LB151:	91				LP		11
030A			60F7			ANIM	F7	; reset FloatX sign
030C			D1				RC	
030D			47				ORMA
030E			0101			LIJ		01
0310			37				RTN		



0344			2C0C			JRP		LB60


0351	LB60:	97				LP		17
0352			6000			ANIM	00
0354			37				RTN	

	


; used in arithmetic subtraction
0355			B1				LP		31  	; savepoint for sign flag, during operations
0356			6201			TSIM	01
0358			2804			JRNZP	LB320
035A			6101			ORIM	01
035C			37				RTN	

035D	LB320:	60FE			ANIM	FE		; set all, except bit 0
035F			37				RTN




; with J = 1, move word at (AB) to Y
0398			86				LP		6   	; Y
0399			1302			LIQ		2   	; AB
039B			0A				MVB				; (AB) --> Y, J+1 bytes
039C			37				RTN	
	
; with J = 1, move word at (AB) to X 
039D			84				LP		4   	; X
039E			1302			LIQ		2   	; AB
03A0			0A				MVB				; (AB) --> X, J+1 bytes
03A1			37				RTN		

; Note: PRINT buffer is at location FEB0
03A2			02B0			LIA		B0
03A4			03FE			LIB		FE
03A6			E39D			CAL		039D 	; block move J+1 bytes (FEB0) -> X
03A8			05				DX		
03A9			37				RTN		
; similar
03AA			02B0			LIA		B0
03AC			03FE			LIB		FE
03AE			E398			CAL		0398 	; block move J+1 bytes (FEB0) -> Y
03B0			07				DY		
03B1			37				RTN		

; FD00-FDBF used in print?
03B2			0200			LIA		00
03B4			03FD			LIB		FD
03B6			E3A6			CAL		03A6 	; block move J+1 bytes (FD00) -> X
03B8			37				RTN		


; ...

; LCD_OFF  : Turn LCD display off
; LCD_ON   : Turn LCD display on
04B4			0200			LIA		0   	; LCD_OFF
04B6			2C03			JRP		LB40	
04B8			0201			LIA		1   	; LCD_ON
04BA	LB40:	125F			LIP		5F  	; OutC Port 
04BC			DB				EXAM		
04BD			DF				OUTC		
04BE			37				RTN		


; set &A5 = 1010 0101 to registers #32 to #40
04BF	LB15:	02A5			LIA		165
04C1			A0				LP		20
04C2			0007			LII		7
04C4			1E				FILM			; ( A -> (P); P + 1 -> P ) for I + 1 times
04C5			37				RTN		

; ?
04C6			F5E8			CAL		15E8
04C8			EF5E			CAL		0F5E
04CA			E897			CAL		0897
04CC			FD6A			CAL		1D6A
04CE			10FF1E			LIDP	FF1E
04D1			02A5			LIA		A5
04D3			52				STD
04D4			F1E0			CAL		11E0
; ?
04D6			E4BF			CAL		04BF 	; set registers 32-40
04D8			F30E			CAL		130E 	; reset output ports
04DA			0208			LIA		08	
04DC			E4BA			CAL		04BA 	; LCD OFF
04DE			0208			LIA		08	
04E0			E4BA			CAL		04BA 	; LCD OFF
04E2			37				RTN




; Used by arithmetic SUM (at 0x0FE2)
; must be something related to exponent handling of floating point
05C1			E12F			CAL		012F
05C3			3A2D			JRCP	LB280
05C5			91				LP		11
05C6			620F			TSIM	0F
05C8			382C			JRZP	LB281
05CA			0210			LIA		10
05CC			0001			LII		01
05CE			0C				ADN
05CF			91				LP		11
05D0			0006			LII		06
05D2			1C				SRW
05D3			91				LP		11
05D4			59				LDM
05D5			58				SWP
05D6			DB				EXAM
05D7	LB282:	90				LP		10
05D8			62F0			TSIM	F0
05DA			3818			JRZP	LB283
05DC			59				LDM
05DD			64F0			ANIA	F0
05DF			6710			CPIA	10
05E1			7E0D60			JPZ		LB284
05E4			6780			CPIA	80
05E6			380A			JRZP	LB280
05E8			620F			TSIM	0F
05EA			2808			JRNZP	LB283
05EC			50				INCP
05ED			62F0			TSIM	F0
05EF			2803			JRNZP	LB283
05F1	LB280:	E14F			CAL		014F
05F3	LB283:	D1				RC
05F4			37				RTN

05F5	LB281:	92				LP		12
05F6			62F0			TSIM	F0
05F8			2922			JRNZM	LB282
05FA			97				LP		17
05FB			0005			LII		05
05FD			1D				SLW
05FE			0001			LII		01
0600			0210			LIA		10
0602			0D				SBN
0603			2D0F			JRM		LB281





; pointers table
082E			10FF54			LIDP	FF54
0831			37				RTN		

0832			10FF12			LIDP	FF12
0835			37				RTN		

0836			10FF13			LIDP	FF13
0839			37				RTN		

0840			14				ADB		
0841			D620			TSID	20
0843			37				RTN		

0844			10FF55			LIDP	FF55
0847			37				RTN	

0848			10FF55			LIDP	FF55
084B			D4C0			ANID	C0
084D			37				RTN		

084E			10FF55			LIDP	FF55
0851			D620			TSID	20
0853			37				RTN		

0854			10FF16			LIDP	FF16
0857			37				RTN	

0858			10FF16			LIDP	FF16
085B			D680			TSID	80
085D			37				RTN		

085E			10FF16			LIDP	FF16
0861			D640			TSID	40
0863			37				RTN		

0864			10FF53			LIDP	FF53
0867			37				RTN		

0868			10FF17			LIDP	FF17
086B			37				RTN	

086C			10FF56			LIDP	FF56
086F			37				RTN		

0870			10FF3F			LIDP	FF3F
0873			37				RTN		

0897	LB2:	10303C			LIDP	303C
089A			D4FD			ANID	FD
089C			37				RTN


; ...


0D4A			84				LP		04
0D4B			1338			LIQ		38
0D4D			0B				EXB
0D4E			37				RTN



0D73	LB244:	B4				LP		34
0D74			DB				EXAM		
0D75			D0				SC		
0D76			37				RTN		

0D93	LB243:	0209			LIA		09
0D95			2D23			JRM		LB244
; entry point is here at 0DDE
0DDE	LB240:  F345			CAL		1345	; move a basic variable to floatY (17..1F)
0DE0			9C				LP		19		; 
0DE1			63D0			CPIM	D0		; what is a D0 at 19?
0DE3			94				LP		14		
0DE4			3807			JRZP	LB241
0DE6			63D0			CPIM	D0		; a D0 at 14 is for a character string pointer, not a number
0DE8			3809			JRZP	LB242
0DEA			D1				RC		
0DEB			37				RTN		

0DEC	LB241:	63D0			CPIM	D0
0DEE			2803			JRNZP	LB242
0DF0			D0				SC		
0DF1			37				RTN		

0DF2	LB242:	5B				POP		
0DF3			5B				POP		
0DF4			2D62			JRM		LB243




; key scan?
0E56			C2				INCB
0E57			2A08			JRNCP	LB120
0E59	LB122:	D1				RC
0E5A			5A				SL
0E5B			3A04			JRCP	LB120
0E5D			48				INCK
0E5E			2D06			JRM	LB122
0E60	LB120:	0255			LIA	55
0E62			2803			JRNZP	LB121
0E64			88				LP		08
0E65			59				LDM
0E66	LB121:	DA				EXAB
0E67			37				RTN

0E68			0254			LIA	54
0E6A			6B08			TEST	08
0E6C			2858			JRNZP	LB110
0E6E			88				LP		08
0E6F			6000			ANIM	00
0E71			89				LP		09
0E72			0207			LIA	07
0E74			DB				EXAM
0E75			8A				LP		0A
0E76			61FF			ORIM	FF
0E78			03FF			LIB	FF
0E7A			125C			LIP	5C
0E7C			0201			LIA	01
0E7E			DB				EXAM
0E7F			5D				OUTA
0E80			103E00			LIDP	3E00
0E83			D400			ANID	00
0E85			4E25			WAIT	25
0E87	LB113:	59				LDM
0E88			D1				RC
0E89			5A				SL
0E8A			DB				EXAM
0E8B			8A				LP		0A
0E8C			4C				INA
0E8D			5D				OUTA
0E8E			DB				EXAM
0E8F			D1				RC
0E90			5A				SL
0E91			46				ANMA
0E92			DB				EXAM
0E93			3833			JRZP	LB111
0E95			EE56			CAL		0E56
0E97	LB112:	89				LP		09
0E98			59				LDM
0E99			88				LP		08
0E9A			44				ADM
0E9B			C9				DECL
0E9C			125C			LIP	5C
0E9E			2918			JRNZM	LB113
0EA0			6000			ANIM	00
0EA2			5D				OUTA
0EA3			8B				LP		0B
0EA4			0201			LIA	01
0EA6			DB				EXAM
0EA7			89				LP		09
0EA8			0207			LIA	07
0EAA			DB				EXAM
0EAB	LB115:	8B				LP		0B
0EAC			59				LDM
0EAD			52				STD
0EAE			643F			ANIA	3F
0EB0			44				ADM
0EB1			4E25			WAIT	25
0EB3			4C				INA
0EB4			3803			JRZP	LB114
0EB6			EE56			CAL		0E56
0EB8	LB114:	88				LP		08
0EB9			7008			ADIM	08
0EBB			C9				DECL
0EBC			2912			JRNZM	LB115
0EBE			D400			ANID	00
0EC0			DA				EXAB
0EC1			6756			CPIA	56
0EC3			2A02			JRNCP	LB116
0EC5	LB110:	D0				SC
0EC6	LB116:	37				RTN

0EC7	LB111:	4E05			WAIT	05
0EC9			2D33			JRM	LB112

; ...



; key scan?
0F2A			125C			LIP		5C
0F2C			0240			LIA		40
0F2E			DB				EXAM
0F2F			5D				OUTA
0F30			103E00			LIDP	3E00
0F33			D400			ANID	00
0F35			4E42			WAIT	42
0F37			4C				INA
0F38			6680			TSIA	80
0F3A			37				RTN

0F3B			125C			LIP		5C
0F3D			6000			ANIM	00
0F3F			5D				OUTA
0F40			103E00			LIDP	3E00
0F43			0280			LIA		80
0F45			52				STD
0F46			4E42			WAIT	42
0F48			E854			CAL		0854
0F4A			D47F			ANID	7F
0F4C			4C				INA
0F4D			6680			TSIA	80
0F4F			2803			JRNZP	LB290
0F51			D580			ORID	80
0F53	LB290:	103E00			LIDP	3E00
0F56			D400			ANID	00
0F58			37				RTN

0F59			10303C			LIDP	303C	; Display flags 
0F5C			D4FD			ANID	FD
0F5E			10FF6B			LIDP	FF6B
0F61			D4F0			ANID	F0
0F63			10FF6B			LIDP	FF6B
0F66			D4F9			ANID	F9
0F68			10FF70			LIDP	FF70
0F6B			02C8			LIA		C8
0F6D			52				STD
0F6E			11C8			LIDL	C8
0F70			0003			LII		03
0F72			0200			LIA		00
0F74			1F				FILD
0F75			37				RTN




; Aritmetic signed addition: X_float +/- Y_float -> X_float
; SUBTRACT (-) entry point
0FE0			E355			CAL		0355
; SUM (+) entry point
0FE2			92				LP		12
0FE3			62F0			TSIM	F0
0FE5			3819			JRZP	LB250
0FE7			9A				LP		1A
0FE8			62F0			TSIM	F0
0FEA			3816			JRZP	LB252
0FEC			E192			CAL		0192
0FEE			0210			LIA		10
0FF0	LB259:	98				LP		18
0FF1			6280			TSIM	80
0FF3			3826			JRZP	LB254
0FF5			9A				LP		1A
0FF6			0005			LII		05
0FF8			1C				SRW				; >>4 bits  on I+1 bytes
0FF9			99				LP		19
0FFA	LB2510:	0001			LII		01
0FFC			0C				ADN				; BCD addition (P) + A -> (P) (BCD); I+1 bytes
0FFD			2D0E			JRM		LB259
0FFF	LB250:	E1CA			CAL		01CA
1001	LB252:	91				LP		11
1002			620F			TSIM	0F
1004			2812			JRNZP	LB251
1006			0004			LII	04
1008	LB253:	50				INCP
1009			6300			CPIM	00
100B			280B			JRNZP	LB251
100D			41				DECI
100E			2B07			JRNCM	LB253
1010			50				INCP
1011			62F0			TSIM	F0
1013			2803			JRNZP	LB251
1015			6000			ANIM	00
1017	LB251:	E5C1			CAL		05C1
1019			37				RTN

101A	LB254:	99				LP		19
101B			0001			LII		01
101D			0D				SBN
101E			3A08			JRCP	LB255
1020			92				LP		12
1021			0005			LII		05
1023			1C				SRW
1024			91				LP		11
1025			2D2C			JRM		LB2510
1027	LB255:	E311			CAL		0311
1029			B1				LP		31
102A			6201			TSIM	01
102C			2809			JRNZP	LB256
102E			E32C			CAL		032C
1030	LB258:	E254			CAL		0254
1032			E311			CAL		0311
1034			2D34			JRM		LB252
1036	LB256:	E360			CAL		0360
1038			3A05			JRCP	LB257
103A			E355			CAL		0355
103C			2D0D			JRM		LB258
103E	LB257:	E254			CAL		0254
1040			E159			CAL		0159
1042			E360			CAL		0360
1044			2D15			JRM		LB258


; Arithmetic MULTIPLY (?) : floatX * floatY -> floatX
1048			E311			CAL		0311
104A			91				LP		11
104B			1319			LIQ		19
104D			0001			LII		01
104F			0E				ADW	
1050			A1				LP		21
1051			1311			LIQ		11
1053			0006			LII		06
1055			08				MVW	
1056			E2AA			CAL		02AA
1058			91				LP		11
1059			0200			LIA		00
105B			1E				FILM
105C			89				LP		09
105D			020B			LIA		0B
105F			DB				EXAM
1060	LB313:	A7				LP		27
1061			59				LDM	
1062			640F			ANIA	0F
1064			A2				LP		22
1065			0005			LII		05
1067			1C				SRW	
1068			40				INCI
1069	LB312:	43				DECA
106A			3A07			JRCP	LB310
106C			97				LP		17
106D			131F			LIQ		1F
106F			0E				ADW	
1070			2D08			JRM		LB312
1072	LB310:	C9				DECL
1073			3A05			JRCP	LB311
1075			91				LP		11
1076			1C				SRW	
1077			2D18			JRM		LB313
1079	LB311:	E2BC			CAL		02BC
107B			E5C1			CAL		05C1
107D			37				RTN	

; Arithmetic DIVIDE (?) : floatX / floatY -> floatX
1080			E311			CAL		0311
1082			E176			CAL		0176
1084			99				LP		19
1085			1311			LIQ		11
1087			0001			LII		01
1089			0F				SBW	
108A			90				LP		10
108B			1318			LIQ		18
108D			08				MVW	
108E			E2AA			CAL		02AA
1090			A1				LP		21
1091			0006			LII		06
1093			0200			LIA		00
1095			1E				FILM
1096			89				LP		09
1097			020C			LIA		0C
1099			DB				EXAM
109A	LB361:	A7				LP		27
109B			1D				SLW	
109C	LB362:	9F				LP		1F
109D			1317			LIQ		17
109F			0F				SBW	
10A0			3A0E			JRCP	LB360
10A2			A7				LP		27
10A3			7001			ADIM	01
10A5			59				LDM	
10A6			640F			ANIA	0F
10A8			670A			CPIA	0A
10AA			290F			JRNZM	LB362
10AC			790D60			JP		0D60
10AF	LB360:	9F				LP		1F
10B0			1317			LIQ		17
10B2			0E				ADW	
10B3			9F				LP		1F
10B4			1D				SLW	
10B5			C9				DECL
10B6			2B1D			JRNCM	LB361
10B8			91				LP		11
10B9			1321			LIQ		21
10BB			08				MVW	
10BC			2D44			JRM		00ED


; From Hrast Programmer's notes:
;
;   +   10BE
;   -   10D3
;   *   10DF
;   /   10E8
;    ...
;
; E.g. a breakpoint at 10BE is hit while performing a command like:
;
;   A + B 
;
; here, value of variable B is already in floatX (10..17); I = 0; J = 1
10BE			EDDE			CAL		0DDE 	; move a variable to floatY but also set Carry, on certain conditions...
10C0			3A08			JRCP 	LB230
; now, value of variable A is in floatY; I = 7; J = 1
; *VERIFIED* 
; entry point with floatX and floatY populated
; floatY - floatX --> floatX
10C2			E2CE			CAL		02CE 	; pre-calc sign
10C4			EFE2			CAL		0FE2 	; this performs the BCD sum
10C6			E2F5			CAL		02F5 	; post-calc sign
; now, floatX contains the result: A+B
10C8			37				RTN		

10C9	LB230:  131D			LIQ		1D
10CB			95				LP		15
10CC			0A				MVB				; (1D) -> (15)
10CD			9F				LP		1F
10CE			59				LDM
10CF			97				LP		17
10D0			44				ADM				; (17) + (1F) --> A
10D1			D1				RC
10D2			37				RTN

; A - B
10D3			EDDE			CAL		0DDE
10D5			7F0D93			JPC		0D93
; *VERIFIED* 
; entry point with floatX and floatY populated;
; floatY - floatX --> floatX
10D8			E2CE			CAL		02CE
10DA			EFE0			CAL		0FE0	; float sum
10DC			E2F5			CAL		02F5
10DE			37				RTN

; A * B
; *VERIFIED* 
; entry point with floatX and floatY populated;
; floatX * floatY --> floatX
10DF			F345			CAL		1345	; move variable given by (FF37) to floatY
10E1			E2CE			CAL		02CE
10E3			F048			CAL		1048 	; float multiply 
10E5	LB320:	E2F5			CAL		02F5
10E7			37				RTN

; A / B
; *VERIFIED* 
; entry point with floatX and floatY populated;
; floatX * floatY --> floatX
10E8			F345			CAL		1345	; move variable given by (FF37) to floatY
10EA			E2CE			CAL		02CE
10EC			F080			CAL		1080    ; float divide
10EE			2D0A			JRM		LB320








; reset output ports
130E			125F			LIP		5F
1310			6001			ANIM	01
1312			DF				OUTC
1313			125E			LIP		5E
1315			60FB			ANIM	FB
1317			5F				OUTF
1318			51				DECP
1319			607F			ANIM	7F
131B			DD				OUTB
131C			103A00			LIDP	3A00
131F			D400			ANID	00
1321			125C			LIP		5C
1323			6000			ANIM	00
1325			5D				OUTA
1326			103E00			LIDP	3E00
1329			D400			ANID	00
132B			4E08			WAIT	08
132D			37				RTN


; string basic variable copy?
132E			0200			LIA		00
1330			88				LP		08
1331			DB				EXAM
1332			02D0			LIA		D0
1334			94				LP		14
1335			DB				EXAM
1336			10FF39			LIDP	FF39 ; the variable
1339			57				LDD
133A			03FE			LIB		FE
133C			E3AE			CAL		03AE ; with J = 1, move word at (AB) to Y
133E			06				IY
133F			95				LP		15
1340			1306			LIQ		06 ; points to Y
1342			0A				MVB		
1343			07				DY
1344			37				RTN


; called by routine at 0DDE, before performing arithmetic operations
; Seems like copying a basic variable (FF37 should tells which one)
; to floatY register (18-1F)
1345			0318			LIB		18
1347			10FF37			LIDP	FF37	; the variabile to move; eg. 'A' = C0
134A			57				LDD
134B			7508			SBIA	08		; -8 bytes
134D			52				STD		
134E			43				DECA		
134F			84				LP		4		; Xl
1350			DB				EXAM  			; A -> Xl	
1351			02FD			LIA		FD
1353			85				LP		5		; Xh
1354			DB				EXAM		
1355			04				IX		
1356			0007			LII		07		; 8 bytes
1358			DA				EXAB			; 	
1359			30				STP		
135A			18				MVWD			; (DP) -> (P), I+1 bytes
135B			37				RTN

; 



; ...

; Conversion of a binary number (2 bytes) to a decimal number, in internal format
; The 2-byte binary number to be converted is stored in 
; 19H (most significant byte) and 18H (least significant byte) 
; The converted decimal number in internal format is stored in operation register X 
; in the CPU (10H to 17H)
; *VERIFIED*
; Entry point for an UNSIGNED binary (0 to 65535) : 0x1446
1446			B0				LP	48
1447			6102			ORIM			02
1449			E14F			CAL	014F
144B			2C18			JRP			LB130
; Entry point for a SIGNED binary (-32768 to 32767) : 0x144D
144D			E14F			CAL	014F
144F			B0				LP	48
1450			60FC			ANIM			FC
1452			99				LP	25
1453			6280			TSIM			80
1455			380E			JRZP			LB0
1457			B0				LP	48
1458			6101			ORIM			01
145A			0200			LIA			00
145C			99				LP	25
145D			DB				EXAM		
145E			DA				EXAB		
145F			0200			LIA			00
1461			98				LP	24
1462			DB				EXAM		
1463			15				SBB
1464	LB130:	8E				LP	14
1465			1318			LIQ			18
1467			0A				MVB		
1468			88				LP	8
1469			0207			LIA			07
146B			DB				EXAM		
146C			E143			CAL	0143
146E			9C				LP	28
146F			6110			ORIM			10
1471			E200			CAL	0200
1473			EE35			CAL	0E35
1475			0207			LIA			07
1477			88				LP	8
1478			DB				EXAM		
1479			8F				LP	15
147A			59				LDM		
147B			8E				LP	14
147C			DB				EXAM		
147D			EE35			CAL	0E35
147F			91				LP	17
1480			6140			ORIM			40
1482			E5C1			CAL	05C1
1484			B0				LP	48
1485			6202			TSIM			02
1487			280A			JRNZP			LB131
1489			6201			TSIM			01
148B			3806			JRZP			LB131
148D			60FE			ANIM			FE
148F			91				LP	17
1490			6108			ORIM			08
1492	LB131:	D1				RC		
1493			37				RTN		




;  Get keystroke
1494			0203			LIA			3
1496			E4BA			CAL	&04BA
1498			6B01			TEST			1
149A	LB26:	027D			LIA			125
149C			0330			LIB			48
149E			E3AE			CAL	&03AE
14A0			0201			LIA			1
14A2			26				IYS		
14A3			02FB			LIA			251
14A5			26				IYS		
14A6	LB212:	00FC			LII			252
14A8	LB25:	EF2A			CAL	&0F2A
14AA			3805			JRZP			LB20
14AC			E4C6			CAL	&04C6
14AE			2D15			JRM			LB26
14B1			68		??
14B2			2A5C			JRNCP			LB21
14B4			34				PUSH		
14B5			EE68			CAL	&0E68
14B7			DA				EXAB		
14B8			5B				POP		
14B9			2A55			JRNCP			LB21
14BB			83				LP	3
14BC			C7				CPMA		
14BD			2851			JRNZP			LB21
14BF			E82E			CAL	&082E
14C1			D601			TSID			1
14C3			280E			JRNZP			LB27
14C5			D501			ORID			1
14C7			D4FD			ANID			253
14C9			10FF5E			LIDP			65374
14CC			52				STD		
14CD			34				PUSH		
14CE			F710			CAL	&1710
14D0			5B				POP		
14D1			37				RTN		

14D2	LB27:	D602			TSID			2
14D4			3844			JRZP			LB28
14D6			10FF5E			LIDP			65374
14D9			55				MVMD		
14DA			C7				CPMA		
14DB			283D			JRNZP			LB28
14DD			E82E			CAL	&082E
14DF			D608			TSID			8
14E1			2815			JRNZP			LB223
14E3			34				PUSH		
14E4			10303E			LIDP			12350
14E7			82				LP	2
14E8			1A				MVBD		
14E9			6700			CPIA			0
14EB			2817			JRNZP			LB225
14ED			DA				EXAB		
14EE			6700			CPIA			0
14F0			DA				EXAB		
14F1			2811			JRNZP			LB225
14F3			F70C			CAL	&170C
14F5			5B		        POP
14F6			37		        RTN

14F7	LB223:	6B01			TEST			1
14F9			3960			JRZM			LB26
14FB			D604			TSID			4
14FD			3964			JRZM			LB26
14FF			FD54			CAL	&1D54
1501			2D68			JRM			LB26
1504			2A02			JRNCP			LB226
1506			C2				INCB		
1507	LB226:	82				LP	2
1508			10303E			LIDP			12350
150B			1B				EXBD		
150C			5B				POP		
150D			2D74			JRM			LB26
1510			2E		??
1511			D601			TSID			1
1513			383D			JRZP			LB22
1515			D602			TSID			2
1517			3834			JRZP			LB29
1519	LB28:	E82E			CAL	&082E
151B			D4FD			ANID			253
151D			00FC			LII			252
151F	LB23:	6B01			TEST			1
1521			384B			JRZP			LB24
1523			027D			LIA			125
1525			0330			LIB			48
1527			E3A6			CAL	&03A6
1529			0302			LIB			2
152B	LB224:	24				IXL		
152C			660F			TSIA			15
152E			280D			JRNZP			LB213
1530			34				PUSH		
1531			0200			LIA			0
1533			E4BA			CAL	&04BA
1535			4EE0			WAIT			224
1537			0201			LIA			1
1539			E4BA			CAL	&04BA
153B			5B				POP		
153C	LB213:	42				INCA		
153D			52				STD		
153E			2A28			JRNCP			LB214
1540			C3				DECB		
1541			2917			JRNZM			LB224
1543			02FF			LIA			255
1545			52				STD		
1546			05				DX		
1547			52				STD		
1548			E4E3			CAL	&04E3
154A			2DA5			JRM			LB212
154D			2BA6			JRNCM			LB25
154F			D4FE			ANID			254
1551	LB22:	E497			CAL	&0497
1553			E82E			CAL	&082E
1555			D608			TSID			8
1557			3939			JRZM			LB23
1559			10FF34			LIDP			65332
155C			02B0			LIA			176
155E			52				STD		
155F			FD46			CAL	&1D46
1561			E82E			CAL	&082E
1563			D4E1			ANID			225
1565			2DC0			JRM			LB212
1568			2E		??
1569			D604			TSID			4
156B			280B			JRNZP			LB215
156D	LB24:	E82E			CAL	&082E
156F			D601			TSID			1
1571			29CA			JRNZM			LB25
1573			E4A7			CAL	&04A7
1575			2DCE			JRM			LB25

; ...


; used while printing 
1593			B8				LP	56
1594			1304			LIQ			04
1596			0A				MVB		
1597			37				RTN		

; used while printing 
1738			10FF57			LIDP			FF57
173B			D604			TSID			04
173D			37				RTN		


170C	LB227:	02FE			LIA			254
170E			2C03			JRP			LB228
1711			CE		??
1712	LB228:	03FF			LIB			255
1714			10303E			LIDP			12350
1717			82				LP	2
1718			1B				EXBD		
1719			37				RTN		


; ...


1D46	LB210:	016F			LIJ			111
; 1D48 also called from EXT rom bank 9 at the beginning of LCD update (?)
1D48			1030B9			LIDP		30B9
1D4B	LB222:	52				STD		        
1D4C			10FF8F			LIDP		FF8F
1D4F			0208			LIA			08
1D51			52				STD		
1D52			2C31			JRP			LB211

; ...
1D5E	LB217:	1030B9			LIDP		30B9
1D61			52				STD		
1D62			10FF8F			LIDP		FF8F
1D65			0209			LIA			9
1D67			52				STD		
1D68			2C1B			JRP			LB211

; ...
1D84	LB211:	20				LDP		
1D85			10FF71			LIDP		FF71
1D88			52				STD		       	; A --> (FF71)
1D89			10FF8C			LIDP		FF8C
1D8C			0279			LIA			79
1D8E			52				STD		       	; 79 --> (FF8C)
1D8F			118D			LIDL		8D 	; low byte of DP
1D91			0240			LIA			40
1D93			52				STD		
1D94			118E			LIDL		8E 	; low byte of DP
1D96			81				LP	1 ; 1 -> J
1D97			53				MVDM		
1D98			0101			LIJ			01
1D9A			86				LP	6 ; Y 
1D9B			10FF72			LIDP		FF72
1D9E			1B				EXBD			; (DP) <--> (P), J+1 bytes
1D9F			103C00			LIDP		3C00
1DA2			57				LDD		
1DA3			26				IYS		
1DA4			5B				POP		
1DA5			26				IYS		
1DA6			5B				POP		
1DA7			26				IYS		
1DA8			86				LP	6 ; Y
1DA9			10FF72			LIDP		FF72
1DAC			1B				EXBD		
1DAD			10FF8F			LIDP		FF8F
1DB0			57				LDD		
1DB1			640F			ANIA		0F
1DB3			103C00			LIDP		3C00
1DB6			52				STD		
1DB7			10FF71			LIDP		FF71
1DBA			57				LDD		
1DBB			30				STP		
1DBC			1030B9			LIDP		30B9
1DBF			57				LDD		
1DC0			78FF8C			CALL		FF8C ; ?
1DC3			1030B9			LIDP		30B9
1DC6			52				STD		
1DC7			20				LDP		
1DC8			10FF71			LIDP		FF71
1DCB			52				STD		
1DCC			84				LP	4 ; X
1DCD			10FF72			LIDP		FF72
1DD0			1B				EXBD		
1DD1			04				IX		
1DD2			25				DXL		
1DD3			34				PUSH		
1DD4			25				DXL		
1DD5			34				PUSH		
1DD6			25				DXL		
1DD7			103C00			LIDP		3C00
1DDA			640F			ANIA		0F
1DDC			52				STD		
1DDD			05				DX		
1DDE			84				LP	4 ; X
1DDF			10FF72			LIDP		FF72
1DE2			1B				EXBD		
1DE3			10FF71			LIDP		FF71
1DE6			57				LDD		
1DE7			30				STP		
1DE8			1030B9			LIDP		30B9
1DEB			57				LDD		
1DEC			37				RTN	


; ....


1EAF			4D		??
1EB0	LB221:	791D48			JP			LB222
1EB3			4D		??
1EB4			01		??

; ...

1EFE			2D		??
1EFF	LB220:	4F				IPXL		
1F00			01B4			LIJ			180
1F02			2D53			JRM			LB221
1F05			B7		??
1F06			2D		??

; ...

1FFE			D7		??
1FFF	LB219:	FEFF			CAL	&1EFF

