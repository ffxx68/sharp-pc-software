; External ROM bank 09
; starts at 0x4000
.ORG	04000


000000A0			0112			LIJ			12
000000A2			2C1F			JRP			LB90

;...

000000C2	LB90:	791D48			JP			1D48  ; in int ROM?


; bitmap pointer calculation (?)
00000489			34				PUSH		    ; save A (ascii code?)
0000048A			0200			LIA			00
0000048C			0341			LIB			41
0000048E			E39D			CAL	0000039D    ; (4100) --> (Y), J+1 bytes
00000490			5B				POP		
00000491			0300			LIB			00
00000493			6720			CPIA			20  ; blank
00000495			3A1D			JRCP			LB10
00000497			6780			CPIA			80  ; ? 
00000499			3A36			JRCP			LB12
0000049B			67A0			CPIA			A0
0000049D			3A55			JRCP			LB14
0000049F			7520			SBIA			20
000004A1			67C0			CPIA			C0
000004A3			3A23			JRCP			LB19
000004A5			67D0			CPIA			D0
000004A7			3A0B			JRCP			LB10
000004A9			7510			SBIA			10
000004AB			67C5			CPIA			C5
000004AD			3A19			JRCP			LB19
000004AF			67CD			CPIA			CD
000004B1			3A03			JRCP			LB13
000004B3	LB10:	0220			LIA			20
000004B5	LB13:	751F			SBIA			1F    ; A - 1F --> A
000004B7			8B				LP	11
000004B8			DB				EXAM		
000004B9			59				LDM		
000004BA			82				LP	2 ; B
000004BB			14				ADB		
000004BC			82				LP	2 ; B
000004BD			14				ADB		
000004BE			8B				LP	11
000004BF			44				ADM		
000004C0			59				LDM		
000004C1			2A02			JRNCP			LB11
000004C3			C2				INCB		
000004C4	LB11:	84				LP	4  ; X
000004C5			14				ADB		
000004C6			37				RTN	
000004C7	LB19:	10FF16			LIDP			0000FF16
000004CA			D680			TSID			80            ; (DP) & 80 --> z
000004CC			2918			JRNZM			LB13          ; if (FF16) != 80  go to LB13
000004CE			2D1C			JRM				LB10
000004D0	LB12:	10FF16			LIDP			0000FF16
000004D3			D680			TSID			80
000004D5			2921			JRNZM			LB13
000004D7			675C			CPIA			5C
000004D9			3807			JRZP			LB40
000004DB			677E			CPIA			7E
000004DD			380F			JRZP			LB43
000004DF			2D2B			JRM			LB13
000004E1	LB40:	0284			LIA			84
000004E3			0344			LIB			44
000004E5	LB113:	E39D			CAL	0000039D  ; block move (4484) -> (X) J+1 bytes
000004E7			0205			LIA			05
000004E9			0300			LIB			00
000004EB			2D28			JRM			LB11
000004ED			027F			LIA			7F
000004EF	LB14:	0344			LIB			44
000004F1			2D0D			JRM			LB113
000004F3	LB14:	E89D			CAL	0000089D
000004F5			D640			TSID			40
000004F7			3945			JRZM			45
000004F9			744D			ADIA			4D
000004FB			2D47			JRM			LB13



; bitmapping character from printbuffer
000004FD			88				LP	8
000004FE			59				LDM		; K -> A
000004FF			8A				LP	10
00000500			C7				CPMA	; M - A -> c,z
00000501			2806			JRNZP			LB30
00000503			86				LP	6	; reg Y
00000504			10FF3E			LIDP			0000FF3E ; pointer to character in printbuffer
00000507			53				MVDM
00000508	LB30:	30				STP		
00000509			59				LDM		        ; ascii in A
0000050A			784489			CALL			00004489 ; bitmap pointer calculation -> X
0000050D			37				RTN		

0000050E			10FF54			LIDP			0000FF54
00000511			D610			TSID			10
00000513			3825			JRZP			LB70
00000515			D4EF			ANID			EF
00000517			10FF3D			LIDP			0000FF3D
0000051A			57				LDD		
0000051B	LB71:	784489			CALL			00004489
0000051E			10FF3E			LIDP			0000FF3E
00000521			57				LDD		
00000522			42				INCA		
00000523			0330			LIB			30
00000525			E3AE			CAL	000003AE
00000527			6740			CPIA			40
00000529			0305			LIB			05
0000052B			2A07			JRNCP			LB72
0000052D	LB73:	25				DXL		
0000052E			26				IYS		
0000052F			C3				DECB		
00000530			2904			JRNZM			LB73
00000532			37				RTN		

00000533	LB72:	25				DXL		
00000534			27				DYS		
00000535			C3				DECB		
00000536			2904			JRNZM			LB72
00000538			37				RTN		

00000539	LB70:	D510			ORID			10
0000053B			02F9			LIA			F9
0000053D			2D23			JRM			LB71

00000540			0003			LII			03
00000542			30				STP		
00000543			E3AE			CAL	000003AE ; block move 
00000545			0210			LIA			10
00000547			88				LP	8
00000548			DB				EXAM		
00000549			020C			LIA			0C
0000054B			89				LP	9
0000054C			DB				EXAM		
0000054D	LB61:	88				LP	8
0000054E			59				LDM		
0000054F			30				STP		
00000550			59				LDM		
00000551			784489			CALL			00004489
00000554			0305			LIB			05
00000556	LB60:	25				DXL		
00000557			26				IYS		
00000558			C3				DECB		
00000559			2904			JRNZM			LB60
0000055B			48				INCK		
0000055C			C9				DECL		
0000055D			2911			JRNZM			LB61
0000055F			027C			LIA			7C
00000561			86				LP	6
00000562			DB				EXAM		
00000563			020C			LIA			0C
00000565			89				LP	9
00000566			DB				EXAM		
00000567	LB63:	88				LP	8
00000568			59				LDM		
00000569			30				STP		
0000056A			59				LDM		
0000056B			784489			CALL			00004489
0000056E			0305			LIB			05
00000570	LB62:	25				DXL		
00000571			27				DYS		
00000572			C3				DECB		
00000573			2904			JRNZM			LB62
00000575			48				INCK		
00000576			C9				DECL		
00000577			2911			JRNZM			LB63
00000579			37				RTN	

00000581			DB				EXAM		
00000582			2C2A			JRP			LB80

; ?
00000584			7840A0			CALL    000040A0  ; goes to internal ROM 1D48 (init routines?)
00000587			E844			CAL 	00000844  ; data pointer: LIDP FF55 (?)


; ASCII Print buffer at FFB0 translated to bitmap and written onto LCD
00000589			D601			TSID			01
0000058B			28BE			JRNZP			LB90
0000058D			D620			TSID			20  ; if blank, skip?
0000058F			38BA			JRZP			LB90
00000591			10FF3E			LIDP			FF3E ; pointer to current char ?
00000594			8A				LP	10  ; reg_M
00000595			55				MVMD		    ; (FF3E) --> M 
00000596			59				LDM		        ; M --> A
00000597			30				STP		        ; A --> M
00000598			E82E			CAL	082E        ; FF54 -> DP (what is it?)
0000059A			D510			ORID			10  ; (FF54) | b00010000 --> (FF54)
0000059C			D4FB			ANID			FB  ; (FF54) & b11111011 --> (FF54)
0000059E			6300			CPIM			00  ; testing bit xxxBxxxxx of (FF54)
000005A0			025F			LIA			5F
000005A2			3809			JRZP			LB96
000005A4			D504			ORID			04
000005A6			10FF3D			LIDP			FF3D ; ?
000005A9			53				MVDM		
000005AA			02F9			LIA			F9
000005AC	LB96:	DB				EXAM		    ; M --> A ; F9 --> M
000005AD	LB80:	90				LP	16  ; reg_16 
000005AE			20				LDP		        ; reg_16 --> A  ? 
000005AF			88				LP	8   ; reg_K
000005B0			DB				EXAM	        ; A <--> (K)
000005B1			0200			LIA			00
000005B3			0330			LIB			30
000005B5			E3AE			CAL	000003AE   ; (3000) --> (Y), J+1 bytes; what is J, and Y?
; fill LCD, 6 + 3 + 3 + 3 + 3 + 6 characters (different memory ranges)
; First 6 characters to print
000005B7			0206			LIA			06 
000005B9			89				LP	9  ; Using L as loop counter
000005BA			DB				EXAM	  	
000005BB	LB97:	7844FD			CALL	44FD ; map char bitmap address --> X
; move 5 bytes from (X), downward, to (Y), upward.
000005BE			25				DXL		
000005BF			26				IYS		
000005C0			25				DXL		
000005C1			26				IYS		
000005C2			25				DXL		
000005C3			26				IYS		
000005C4			25				DXL		
000005C5			26				IYS		
000005C6			25				DXL		
000005C7			26				IYS		
000005C8			48				INCK		
000005C9			C9				DECL		
000005CA			2910			JRNZM			LB97
; next 3 characters to print	
000005CC			022C			LIA			2C  ; 2C = 44 = LCD offset
000005CE			86				LP	6 ; Y 
000005CF			DB				EXAM	
000005D0			0203			LIA			03  
000005D2			89				LP	9 ; on L
000005D3			DB				EXAM		
000005D4	LB933:	7844FD			CALL	44FD
000005D7			25				DXL		
000005D8			26				IYS		
000005D9			25				DXL		
000005DA			26				IYS		
000005DB			25				DXL		
000005DC			26				IYS		
000005DD			25				DXL		
000005DE			26				IYS		
000005DF			25				DXL		
000005E0			26				IYS		
000005E1			48				INCK		
000005E2			C9				DECL		
000005E3			2910			JRNZM			LB933
; next 3 characters
000005E5			021D			LIA			1D ; LCD offset
000005E7			86				LP	6
000005E8			DB				EXAM		
000005E9			0203			LIA			03
000005EB			89				LP	9
000005EC			DB				EXAM		
000005ED	LB950:	7844FD			CALL			000044FD
000005F0			25				DXL		
000005F1			26				IYS		
000005F2			25				DXL		
000005F3			26				IYS		
000005F4			25				DXL		
000005F5			26				IYS		
000005F6			25				DXL		
000005F7			26				IYS		
000005F8			25				DXL		
000005F9			26				IYS		
000005FA			48				INCK		
000005FB			C9				DECL		
000005FC			2910			JRNZM			LB950
; next 3 characters
000005FE			026D			LIA			6D ; LCD offset
00000600			86				LP	6
00000601			DB				EXAM		
00000602			0203			LIA			03
00000604			89				LP	9
00000605			DB				EXAM		
00000606	LB956:	7844FD			CALL			000044FD
00000609			25				DXL		
0000060A			27				DYS		
0000060B			25				DXL		
0000060C			27				DYS		
0000060D			25				DXL		
0000060E			27				DYS		
0000060F			25				DXL		
00000610			27				DYS		
00000611			25				DXL		
00000612			27				DYS		
00000613			48				INCK		
00000614			C9				DECL		
00000615			2910			JRNZM			LB956
; next 3 characters
00000617			027C			LIA			7C ; LCD offset
00000619			86				LP	6
0000061A			DB				EXAM		
0000061B			0203			LIA			03
0000061D			89				LP	9
0000061E			DB				EXAM		
0000061F	LB957:	7844FD			CALL	44FD
00000622			25				DXL		
00000623			27				DYS		
00000624			25				DXL		
00000625			27				DYS		
00000626			25				DXL		
00000627			27				DYS		
00000628			25				DXL		
00000629			27				DYS		
0000062A			25				DXL		
0000062B			27				DYS		
0000062C			48				INCK		
0000062D			C9				DECL		
0000062E			2910			JRNZM			LB957
; last 6 characters
00000630			025E			LIA			5E ; LCD offset
00000632			86				LP	6 ; to Y
00000633			DB				EXAM		
00000634			0206			LIA			06
00000636			89				LP	9 ; loop on L
00000637			DB				EXAM		
00000638	LB958:	7844FD			CALL	44FD
0000063B			25				DXL		
0000063C			27				DYS		
0000063D			25				DXL		
0000063E			27				DYS		
0000063F			25				DXL		
00000640			27				DYS		
00000641			25				DXL		
00000642			27				DYS		
00000643			25				DXL		
00000644			27				DYS		
00000645			48				INCK		
00000646			C9				DECL		
00000647			2910			JRNZM			LB958
00000649			37				RTN		 ; done

0000064A	LB90:	E82E			CAL	0000082E  ;  FF54 --> DP
0000064C			D4FB			ANID    FB ; -- ? means?
0000064E			2DA2			JRM	    LB80


;  ... 


0000089C			30		??
0000089D	LB15:	26				IYS		
0000089E			93				LP	19
0000089F			59				LDM		
000008A0			64F0			ANIA			F0
000008A2			2A04			JRNCP			LB16
000008A4			3806			JRZP			LB110
000008A6			D1				RC		
000008A7	LB16:	58				SWP		
000008A8			6530			ORIA			30
000008AA			26				IYS		
000008AB	LB110:	59				LDM		
000008AC			640F			ANIA			0F
000008AE			2A03			JRNCP			LB17
000008B0			3804			JRZP			LB111
000008B2	LB17:	6530			ORIA			30
000008B4			26				IYS		
000008B5	LB111:	94				LP	20
000008B6			59				LDM		
000008B7			58				SWP		
000008B8			640F			ANIA			0F
000008BA			6530			ORIA			30
000008BC			26				IYS		
000008BD			86				LP	6
000008BE			59				LDM		
000008BF			75A0			SBIA			A0
000008C1			10FF5F			LIDP			0000FF5F
000008C4			52				STD		
000008C5			37				RTN		

; Clear internal RAM at 0x10 and transfer here 24 characters from FD60
; FF6C should pint to the end of string
00000CED			10FF6C			LIDP	0000FF6C ; what is it ???
00000CF0			86				LP	6             
00000CF1			1A				MVBD		;  (FF6C) -> Y the end of the string
00000CF2			06				IY		
00000CF3			0220			LIA		0x20
00000CF5			0010			LII		0x10
00000CF7			1F				FILD		
00000CF8			10FD60			LIDP			0000FD60 ; Print BUFFER, from BASIC PRINT command
00000CFB			90				LP	16        ; destination 0x10
00000CFC			0017			LII		0x17  ;  24-1 characters
00000CFE			18				MVWD		
00000CFF			37				RTN	


; ** entry point to the print-screen routine ? ***
00000DB7			784CED			CALL			00004CED ; --> move PRINT buffer to internal RAM
00000DBA			784587			CALL			00004587 ; --> call to bitmapper and LCD writing
00000DBD			ED4A			CAL	00000D4A             ; ???
00000DBF			E836			CAL	00000836
00000DC1			D604			TSID			04
00000DC3			3809			JRZP			LB100
00000DC5			B5				LP	53
00000DC6			6108			ORIM			08
00000DC8			E844			CAL	00000844
00000DCA			D501			ORID			01
00000DCC			37				RTN		

00000DCD	LB100:	F150			CAL	00001150
00000DCF			E89D			CAL	0000089D
00000DD1			D501			ORID			01
00000DD3			E4B8			CAL	000004B8
00000DD5			10FF47			LIDP			0000FF47
00000DD8			82				LP	2
00000DD9			1A				MVBD		
00000DDA			88				LP	8
00000DDB			15				SBB		
00000DDC			3804			JRZP			LB103
00000DDE			785B37			CALL			00005B37
00000DE1	LB103:	E89D			CAL	0000089D
00000DE3			D4FE			ANID			FE
00000DE5			E4B4			CAL	000004B4
00000DE7			D1				RC		
00000DE8			37				RTN	

; ...
00000E8D	LB833:	10FEB0			LIDP			0000FEB0
00000E90			0220			LIA			20
00000E92			004F			LII			4F
00000E94			1F				FILD		
00000E95			E864			CAL	00000864   ;  = LIDP FF53
00000E97			D400			ANID			00
00000E99			116E			LIDL			6E
00000E9B			D4FE			ANID			FE
00000E9D			24				IXL		
00000E9E			67CA			CPIA			CA
00000EA0			282C			JRNZP			LB80
00000EA2			24				IXL		
00000EA3			673B			CPIA			3B
00000EA5			3823			JRZP			LB82
00000EA7			05				DX		
00000EA8			B3				LP	51
00000EA9			59				LDM		
00000EAA			34				PUSH		
00000EAB			EB28			CAL	00000B28
00000EAD			5B				POP		
00000EAE			3A4E			JRCP			LB81
00000EB0			F585			CAL	00001585

00000EC9	LB82:	FB3C			CAL	00001B3C
00000ECB			2C02			JRP			LB85
00000ECE	LB85:	B3				LP	51
00000ECF			59				LDM		
00000ED0			34				PUSH		
00000ED1			E864			CAL	00000864
00000ED3			57				LDD		
00000ED4			34				PUSH		
00000ED5			EB31			CAL	00000B31
00000ED7			5B				POP		
00000ED8			E864			CAL	00000864
00000EDA			52				STD		
00000EDB			5B				POP		
00000EDC			3A20			JRCP			LB81
00000EDE			B3				LP	51
00000EDF			DB				EXAM		
00000EE0			24				IXL		
00000EE1			670D			CPIA			0D
00000EE3			3805			JRZP			LB86
00000EE5			673A			CPIA			3A
00000EE7			2816			JRNZP			LB820
00000EE9	LB86:	6202			TSIM			02
00000EEB			3809			JRZP			LB87
00000EED			10FFF4			LIDP			0000FFF4
00000EF0			57				LDD		
00000EF1			67D0			CPIA			D0
00000EF3			2803			JRNZP			LB823
00000EF5	LB87:	FAF7			CAL	00001AF7
00000EF7	LB823:	B3				LP	51
00000EF8			6110			ORIM			10
00000EFA			7857F4			CALL			000057F4
00000EFD	LB81:	37				RTN		

00000EFE	LB820:	673B			CPIA			3B
00000F00			2830			JRNZP			LB821
00000F02			6201			TSIM			01
00000F04			2829			JRNZP			LB822
00000F06			6204			TSIM			04
00000F08			3806			JRZP			LB832
00000F0A			60FB			ANIM			FB
00000F0C			FAF7			CAL	00001AF7
00000F0E			B3				LP	51
00000F0F	LB832:	6102			ORIM			02
00000F11	LB834:	784FC0			CALL			00004FC0
00000F14			3B18			JRCM			LB81
00000F16			24				IXL		
00000F17			05				DX		
00000F18			670D			CPIA			0D
00000F1A			3813			JRZP			LB822
00000F1C			673A			CPIA			3A
00000F1E			380F			JRZP			LB822
00000F20			EAD3			CAL	00000AD3
00000F22			7857EA			CALL			000057EA
00000F25			7857FD			CALL			000057FD
00000F28			3B2C			JRCM			LB81
00000F2A			EAE0			CAL	00000AE0
00000F2C			2DA0			JRM			LB833
00000F2F			77		??
00000F30			37				RTN		

00000F31	LB821:	672C			CPIA			2C
00000F33			2906			JRNZM			LB822
00000F35			6203			TSIM			03
00000F37			290A			JRNZM			LB822
00000F39			6101			ORIM			01
00000F3B			2D2B			JRM			LB834


; 24 characters!
; but this can't be code (it's self-looping)
00001FD1	LB17:	FFFF			CAL	&00001FFF
00001FD3			FFFF			CAL	&00001FFF
00001FD5			FFFF			CAL	&00001FFF
00001FD7			FFFF			CAL	&00001FFF
00001FD9			FFFF			CAL	&00001FFF
00001FDB			FFFF			CAL	&00001FFF
00001FDD			FFFF			CAL	&00001FFF
00001FDF			FFFF			CAL	&00001FFF
00001FE1			FFFF			CAL	&00001FFF
00001FE3			FFFF			CAL	&00001FFF
00001FE5			FFFF			CAL	&00001FFF
00001FE7			FFFF			CAL	&00001FFF
00001FE9			FFFF			CAL	&00001FFF
00001FEB			FFFF			CAL	&00001FFF
00001FED			FFFF			CAL	&00001FFF
00001FEF			FFFF			CAL	&00001FFF
00001FF1			FFFF			CAL	&00001FFF
00001FF3			FFFF			CAL	&00001FFF
00001FF5			FFFF			CAL	&00001FFF
00001FF7			FFFF			CAL	&00001FFF
00001FF9			FFFF			CAL	&00001FFF
00001FFB			FFFF			CAL	&00001FFF
00001FFD			FFFF			CAL	&00001FFF
00001FFF	LB16:	FFD1			CAL	&00001FD1

